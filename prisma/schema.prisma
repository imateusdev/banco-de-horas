// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relationships
  timeRecords     TimeRecord[]
  monthlyGoals    MonthlyGoal[]
  hourConversions HourConversion[]
  
  @@map("users")
}

model TimeRecord {
  id         String   @id @default(cuid())
  userId     String   @map("user_id")
  name       String
  date       DateTime
  type       String   @default("work") // "work" or "time_off"
  startTime  String   @map("start_time")
  endTime    String   @map("end_time")
  totalHours Float    @map("total_hours")
  createdAt  DateTime @default(now()) @map("created_at")
  
  // Relationship
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("time_records")
  @@index([userId])
  @@index([date])
}

model MonthlyGoal {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  month     String   // YYYY-MM format
  hoursGoal Float    @map("hours_goal")
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relationship
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([userId, month])
  @@map("monthly_goals")
  @@index([userId])
}

model HourConversion {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  hours     Float
  amount    Float    @default(0) // valor em dinheiro quando type = 'money'
  type      String   @default("money") // 'money' ou 'time_off'
  date      DateTime
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relationship
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("hour_conversions")
  @@index([userId])
}
